name: Build and Release
on:
 workflow_dispatch:

defaults:
    run:
      shell: msys2 {0}
   
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        # location: C:\ # C:\msys64
        release: false
        install: >-
            mingw-w64-x86_64-autotools
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-glew
            mingw-w64-x86_64-libarchive
            mingw-w64-x86_64-make
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-python-pip
            mingw-w64-x86_64-python-psutil
            mingw-w64-x86_64-toolchain
            bison
            flex
            git
            nasm
            p7zip
            unzip
            zip

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        tools: 'tools_qtcreator,qt.tools.qtcreator'
        arch: 'win64_msvc2019_64'
        # dir: ${{ runner.temp }} # bin: ${{ runner.temp }}/Qt/5.12.2/win64_msvc2019_64/bin
        dir: 'C:/' # bin: C:/Qt/5.12.2/win64_msvc2019_64/bin
        modules: 'qtwebengine'
        # source: true # IDK

    # - name: Install dependencies
    #   run: |
    #     # choco install qt5-default cmake qtcreator ninja strawberryperl msys2
    #     choco install cmake ninja strawberryperl
    #     # git clone https://github.com/microsoft/vcpkg
    #     # ./vcpkg/bootstrap-vcpkg.bat
        
    # - name: Install MSYS2 dependencies
    #   run: |
    #     C:\msys64\usr\bin\bash.exe -l -i -c "pacman -S --needed --noconfirm \
    #       mingw-w64-x86_64-autotools \
    #       mingw-w64-x86_64-cmake \
    #       mingw-w64-x86_64-glew \
    #       mingw-w64-x86_64-libarchive \
    #       mingw-w64-x86_64-make \
    #       mingw-w64-x86_64-meson \
    #       mingw-w64-x86_64-python-pip \
    #       mingw-w64-x86_64-python-psutil \
    #       mingw-w64-x86_64-toolchain \
    #       bison \
    #       flex \
    #       git \
    #       nasm \
    #       p7zip \
    #       unzip \
    #       zip"

    - name: Echo python
      run: |
        which python
        python --version
        python -m pip --version
    
    - name: Adjsut path
      run: |
        export PATH=/c/msys64/mingw64/bin:$PATH
        export ACLOCAL_PATH=/c/msys64/usr/share/aclocal/

    # - name: Set up environment
    #   run: |
    #     echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
    #     echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $GITHUB_PATH
 
    - name: Install Python dependencies
      run: |
        # pip install -r requirements.txt
        SETUPTOOLS_USE_DISTUTILS=stdlib python3 -m pip install --user --upgrade -r requirements.txt
        
    - name: Build
      run: |
        mkdir build
        cd build
        # cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DRV_DEPS_QT5_LOCATION=C:/Qt/5.15.2/mingw81_64
        cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DRV_DEPS_WIN_PERL_ROOT=/c/Strawberry/perl/bin -DRV_DEPS_QT5_LOCATION=/c/Qt/5.12.2/win64_msvc2019_64
        cmake --build . --config Release


    - name: Cache build artifacts
      uses: actions/cache@v2
      with:
        path: build
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-
          
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: Release ${{ github.ref }}
    #     draft: false
    #     prerelease: false

    # - name: Upload Release Asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./build/bin/OpenRV.exe  # Adjust this to the path of your built binary
    #     asset_name: OpenRV.exe
    #     asset_content_type: application/octet-stream
 
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      with:
        name: OPENRV
        files: ./build/bin/OpenRV.exe
        fail_on_unmatched_files: true
        draft: true